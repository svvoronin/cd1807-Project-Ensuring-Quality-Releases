name: Azure Pipelines

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
  - main

# ToDo: Replace the agent pool name, if you are using Udacity Cloud lab.
# Otherwise comment out the line below.
#pool: myAgentPool

variables:
  python.version: "3.7.6"
  # ToDo: Replace the service connection name as used in the DevOps project settings
  azureServiceConnectionId: "test_connection"
  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)
  # Environment name
  environmentName: "test_env"

stages:
  - stage: Build
    jobs:
      - job: BuildInfrastructure
        steps:
          # Install Terraform on the pipeline agent
          - task: TerraformInstaller@0
            displayName: "Terrafom installation"
            inputs:
              terraformVersion: "1.2.9"

          # Run Terraform Init on the pipeline agent
          # ToDo: Replace the resource group name, storage account name, and container name below
          - task: TerraformTaskV3@3
            displayName: "Terrafom init"
            inputs:
              provider: "azurerm"
              command: "init"
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/environments/test"
              backendServiceArm: "$(azureServiceConnectionId)"
              backendAzureRmResourceGroupName: "Udacity"
              backendAzureRmStorageAccountName: "tfstate1082121015"
              backendAzureRmContainerName: "tfstate"
              backendAzureRmKey: "terraform.tfstate"

          # Run Terraform Validate
          - task: TerraformTaskV3@3
            displayName: Terraform validate
            inputs:
              provider: "azurerm"
              command: "validate"

          # Run Terraform Apply
          # ToDo: Change the workingDirectory path, as applicable to you
          - task: TerraformTaskV3@3
            displayName: Terraform apply
            inputs:
              provider: "azurerm"
              command: "apply"
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/environments/test"
              environmentServiceNameAzureRM: "$(azureServiceConnectionId)"

          # Destroy the resources in Azure
          # ToDo: Change the workingDirectory path, as applicable to you
          - task: TerraformTaskV3@3
            displayName: Terraform destroy
            inputs:
              provider: "azurerm"
              command: "destroy"
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/environments/test"
              environmentServiceNameAzureRM: "$(azureServiceConnectionId)"

#--------------------------------------------#    
    # Postman - Install Newman    
    # ToDo: Update the command and verify the working directory
    - task: CmdLine@2
      displayName: Install Newman
      inputs:
        script:  sudo npm install -g newman
        workingDirectory: $(System.DefaultWorkingDirectory)
    - task: CmdLine@2
      displayName: Install Newman Reporter
      inputs:
        script:  sudo npm install -g newman-reporter-junitfull
        workingDirectory: $(System.DefaultWorkingDirectory)        
    # Postman Data Validation Test Suite    
    # ToDo: Verify the working directory and the newman scripts
    - task: CmdLine@2
      displayName: Run Data Validation Tests
      continueOnError: true
      inputs:
        script:  newman run Data_Validation.postman_collection.json -e Udacity3.postman_environment.json -r cli,junitfull --reporter-junitfull-export TEST-validation.xml # ToDo: Write your commands
        workingDirectory: '$(System.DefaultWorkingDirectory)/automatedtesting/postman'
    # Postman Regression Test Suite    
    # ToDo: Update the command and verify the working directory
    - task: CmdLine@2
      displayName: Run Regression Tests
      continueOnError: true
      inputs:
        script:  newman run Regression.postman_collection.json -e Udacity3.postman_environment.json -r cli,junitfull --reporter-junitfull-export TEST-regression.xml  # ToDo: Write your commands
        workingDirectory: '$(System.DefaultWorkingDirectory)/automatedtesting/postman'
    # Postman - Publish Results 
    # ToDo: Complete the task as explained here: https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/test/publish-test-results?view=azure-devops&tabs=trx%2Cyaml#yaml-snippet
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TEST-*.xml'
        #searchFolder:       # ToDo
        mergeTestResults: true
        testRunTitle:       'Return postman tests' # ToDo